{"version":3,"sources":["../pwa-serviceworker.js"],"names":["cacheName","cacheFiles","listening","self","addEventListener","evt","console","log","skipWaiting","waitUntil","caches","open","then","cache","addAll","clients","claim","uri","URL","request","url","mode","method","origin","location","respondWith","match","fetch","catch","refreshed","type","window","reload","action","notification","close","json","data","text","JSON","parse","options","body","timestamp","time","timeStamp","badge","lang","requireInteraction","silent","icon","tag","received","Date","now","actions","title","registration","showNotification"],"mappings":"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","file":"pwa-serviceworker.js","sourceRoot":"../client","sourcesContent":["/* eslint-disable no-console */\n\n// https://codelabs.developers.google.com/codelabs/your-first-pwapp/#0\n\nconst cacheName = 'pigallery';\nconst cacheFiles = [\n  '/favicon.ico',\n  '/manifest.json',\n  '/assets/dash-64.png',\n  '/assets/dash-128.png',\n  '/assets/dash-256.png',\n  '/assets/dash-512.png',\n  '/assets/dash-1024.png',\n  '/assets/roboto.ttf',\n  '/assets/roboto-condensed.ttf',\n];\nlet listening = false;\n\nif (!listening) {\n  self.addEventListener('message', (evt) => {\n    console.log('PWA Event Message:', evt);\n  });\n\n  self.addEventListener('install', (evt) => {\n    self.skipWaiting();\n    evt.waitUntil(caches.open(cacheName).then((cache) => cache.addAll(cacheFiles)));\n  });\n\n  self.addEventListener('activate', (evt) => {\n    evt.waitUntil(self.clients.claim());\n  });\n\n  self.addEventListener('fetch', (evt) => {\n    const uri = new URL(evt.request.url);\n    if (evt.request.cache === 'only-if-cached' && evt.request.mode !== 'same-origin') return;\n    if (evt.request.method !== 'GET') return;\n    if (uri.origin !== location.origin) return;\n    if (evt.request.mode === 'navigate') {\n      evt.respondWith(caches.match(evt.request).then((cache) => cache || fetch(evt.request)).catch(() => caches.match('/offline.html')));\n    }\n  });\n\n  let refreshed = false;\n  self.addEventListener('controllerchange', (evt) => {\n    console.log(`PWA: ${evt.type}`);\n    if (refreshed) return;\n    refreshed = true;\n    window.location.reload();\n  });\n\n  self.addEventListener('notificationclick', (evt) => {\n    if (evt.action === 'close') {\n      evt.notification.close();\n    } else {\n      console.log(`Notification: ${evt.type}`);\n    }\n  });\n\n  self.addEventListener('push', (evt) => {\n    let json = evt.data.text();\n    try {\n      json = JSON.parse(json);\n    } catch { /***/ }\n    const options = {\n      body: json.text || json,\n      timestamp: json.time || evt.timeStamp,\n      badge: 'favicon.ico',\n      lang: 'en',\n      requireInteraction: false,\n      silent: true,\n      icon: 'favicon.ico',\n      tag: 'pidash',\n      data: { received: Date.now() },\n      actions: [{ action: 'close', title: 'Dismiss' }],\n    };\n    console.log(`PWA: ${evt.type} ${options.body}`);\n    evt.waitUntil(\n      self.registration.showNotification('PiDash', options),\n    );\n  });\n\n  listening = true;\n}\n"]}